package bz.sunlight.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class EnterpriseAccountExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table enterprise_account
	 * @mbggenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table enterprise_account
	 * @mbggenerated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table enterprise_account
	 * @mbggenerated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table enterprise_account
	 * @mbggenerated
	 */
	public EnterpriseAccountExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table enterprise_account
	 * @mbggenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table enterprise_account
	 * @mbggenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table enterprise_account
	 * @mbggenerated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table enterprise_account
	 * @mbggenerated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table enterprise_account
	 * @mbggenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table enterprise_account
	 * @mbggenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table enterprise_account
	 * @mbggenerated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table enterprise_account
	 * @mbggenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table enterprise_account
	 * @mbggenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table enterprise_account
	 * @mbggenerated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table enterprise_account
	 * @mbggenerated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(String value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(String value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(String value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(String value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(String value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(String value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLike(String value) {
			addCriterion("id like", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotLike(String value) {
			addCriterion("id not like", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<String> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<String> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(String value1, String value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(String value1, String value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andEnterpirseIdIsNull() {
			addCriterion("enterpirse_id is null");
			return (Criteria) this;
		}

		public Criteria andEnterpirseIdIsNotNull() {
			addCriterion("enterpirse_id is not null");
			return (Criteria) this;
		}

		public Criteria andEnterpirseIdEqualTo(String value) {
			addCriterion("enterpirse_id =", value, "enterpirseId");
			return (Criteria) this;
		}

		public Criteria andEnterpirseIdNotEqualTo(String value) {
			addCriterion("enterpirse_id <>", value, "enterpirseId");
			return (Criteria) this;
		}

		public Criteria andEnterpirseIdGreaterThan(String value) {
			addCriterion("enterpirse_id >", value, "enterpirseId");
			return (Criteria) this;
		}

		public Criteria andEnterpirseIdGreaterThanOrEqualTo(String value) {
			addCriterion("enterpirse_id >=", value, "enterpirseId");
			return (Criteria) this;
		}

		public Criteria andEnterpirseIdLessThan(String value) {
			addCriterion("enterpirse_id <", value, "enterpirseId");
			return (Criteria) this;
		}

		public Criteria andEnterpirseIdLessThanOrEqualTo(String value) {
			addCriterion("enterpirse_id <=", value, "enterpirseId");
			return (Criteria) this;
		}

		public Criteria andEnterpirseIdLike(String value) {
			addCriterion("enterpirse_id like", value, "enterpirseId");
			return (Criteria) this;
		}

		public Criteria andEnterpirseIdNotLike(String value) {
			addCriterion("enterpirse_id not like", value, "enterpirseId");
			return (Criteria) this;
		}

		public Criteria andEnterpirseIdIn(List<String> values) {
			addCriterion("enterpirse_id in", values, "enterpirseId");
			return (Criteria) this;
		}

		public Criteria andEnterpirseIdNotIn(List<String> values) {
			addCriterion("enterpirse_id not in", values, "enterpirseId");
			return (Criteria) this;
		}

		public Criteria andEnterpirseIdBetween(String value1, String value2) {
			addCriterion("enterpirse_id between", value1, value2,
					"enterpirseId");
			return (Criteria) this;
		}

		public Criteria andEnterpirseIdNotBetween(String value1, String value2) {
			addCriterion("enterpirse_id not between", value1, value2,
					"enterpirseId");
			return (Criteria) this;
		}

		public Criteria andAccountBalanceIsNull() {
			addCriterion("account_balance is null");
			return (Criteria) this;
		}

		public Criteria andAccountBalanceIsNotNull() {
			addCriterion("account_balance is not null");
			return (Criteria) this;
		}

		public Criteria andAccountBalanceEqualTo(Double value) {
			addCriterion("account_balance =", value, "accountBalance");
			return (Criteria) this;
		}

		public Criteria andAccountBalanceNotEqualTo(Double value) {
			addCriterion("account_balance <>", value, "accountBalance");
			return (Criteria) this;
		}

		public Criteria andAccountBalanceGreaterThan(Double value) {
			addCriterion("account_balance >", value, "accountBalance");
			return (Criteria) this;
		}

		public Criteria andAccountBalanceGreaterThanOrEqualTo(Double value) {
			addCriterion("account_balance >=", value, "accountBalance");
			return (Criteria) this;
		}

		public Criteria andAccountBalanceLessThan(Double value) {
			addCriterion("account_balance <", value, "accountBalance");
			return (Criteria) this;
		}

		public Criteria andAccountBalanceLessThanOrEqualTo(Double value) {
			addCriterion("account_balance <=", value, "accountBalance");
			return (Criteria) this;
		}

		public Criteria andAccountBalanceIn(List<Double> values) {
			addCriterion("account_balance in", values, "accountBalance");
			return (Criteria) this;
		}

		public Criteria andAccountBalanceNotIn(List<Double> values) {
			addCriterion("account_balance not in", values, "accountBalance");
			return (Criteria) this;
		}

		public Criteria andAccountBalanceBetween(Double value1, Double value2) {
			addCriterion("account_balance between", value1, value2,
					"accountBalance");
			return (Criteria) this;
		}

		public Criteria andAccountBalanceNotBetween(Double value1, Double value2) {
			addCriterion("account_balance not between", value1, value2,
					"accountBalance");
			return (Criteria) this;
		}

		public Criteria andCalledQuantityIsNull() {
			addCriterion("called_quantity is null");
			return (Criteria) this;
		}

		public Criteria andCalledQuantityIsNotNull() {
			addCriterion("called_quantity is not null");
			return (Criteria) this;
		}

		public Criteria andCalledQuantityEqualTo(Integer value) {
			addCriterion("called_quantity =", value, "calledQuantity");
			return (Criteria) this;
		}

		public Criteria andCalledQuantityNotEqualTo(Integer value) {
			addCriterion("called_quantity <>", value, "calledQuantity");
			return (Criteria) this;
		}

		public Criteria andCalledQuantityGreaterThan(Integer value) {
			addCriterion("called_quantity >", value, "calledQuantity");
			return (Criteria) this;
		}

		public Criteria andCalledQuantityGreaterThanOrEqualTo(Integer value) {
			addCriterion("called_quantity >=", value, "calledQuantity");
			return (Criteria) this;
		}

		public Criteria andCalledQuantityLessThan(Integer value) {
			addCriterion("called_quantity <", value, "calledQuantity");
			return (Criteria) this;
		}

		public Criteria andCalledQuantityLessThanOrEqualTo(Integer value) {
			addCriterion("called_quantity <=", value, "calledQuantity");
			return (Criteria) this;
		}

		public Criteria andCalledQuantityIn(List<Integer> values) {
			addCriterion("called_quantity in", values, "calledQuantity");
			return (Criteria) this;
		}

		public Criteria andCalledQuantityNotIn(List<Integer> values) {
			addCriterion("called_quantity not in", values, "calledQuantity");
			return (Criteria) this;
		}

		public Criteria andCalledQuantityBetween(Integer value1, Integer value2) {
			addCriterion("called_quantity between", value1, value2,
					"calledQuantity");
			return (Criteria) this;
		}

		public Criteria andCalledQuantityNotBetween(Integer value1,
				Integer value2) {
			addCriterion("called_quantity not between", value1, value2,
					"calledQuantity");
			return (Criteria) this;
		}

		public Criteria andOpenTimeIsNull() {
			addCriterion("open_time is null");
			return (Criteria) this;
		}

		public Criteria andOpenTimeIsNotNull() {
			addCriterion("open_time is not null");
			return (Criteria) this;
		}

		public Criteria andOpenTimeEqualTo(Date value) {
			addCriterion("open_time =", value, "openTime");
			return (Criteria) this;
		}

		public Criteria andOpenTimeNotEqualTo(Date value) {
			addCriterion("open_time <>", value, "openTime");
			return (Criteria) this;
		}

		public Criteria andOpenTimeGreaterThan(Date value) {
			addCriterion("open_time >", value, "openTime");
			return (Criteria) this;
		}

		public Criteria andOpenTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("open_time >=", value, "openTime");
			return (Criteria) this;
		}

		public Criteria andOpenTimeLessThan(Date value) {
			addCriterion("open_time <", value, "openTime");
			return (Criteria) this;
		}

		public Criteria andOpenTimeLessThanOrEqualTo(Date value) {
			addCriterion("open_time <=", value, "openTime");
			return (Criteria) this;
		}

		public Criteria andOpenTimeIn(List<Date> values) {
			addCriterion("open_time in", values, "openTime");
			return (Criteria) this;
		}

		public Criteria andOpenTimeNotIn(List<Date> values) {
			addCriterion("open_time not in", values, "openTime");
			return (Criteria) this;
		}

		public Criteria andOpenTimeBetween(Date value1, Date value2) {
			addCriterion("open_time between", value1, value2, "openTime");
			return (Criteria) this;
		}

		public Criteria andOpenTimeNotBetween(Date value1, Date value2) {
			addCriterion("open_time not between", value1, value2, "openTime");
			return (Criteria) this;
		}

		public Criteria andStatusIsNull() {
			addCriterion("status is null");
			return (Criteria) this;
		}

		public Criteria andStatusIsNotNull() {
			addCriterion("status is not null");
			return (Criteria) this;
		}

		public Criteria andStatusEqualTo(Short value) {
			addCriterion("status =", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotEqualTo(Short value) {
			addCriterion("status <>", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThan(Short value) {
			addCriterion("status >", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThanOrEqualTo(Short value) {
			addCriterion("status >=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThan(Short value) {
			addCriterion("status <", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThanOrEqualTo(Short value) {
			addCriterion("status <=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusIn(List<Short> values) {
			addCriterion("status in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotIn(List<Short> values) {
			addCriterion("status not in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusBetween(Short value1, Short value2) {
			addCriterion("status between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotBetween(Short value1, Short value2) {
			addCriterion("status not between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNull() {
			addCriterion("create_time is null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIsNotNull() {
			addCriterion("create_time is not null");
			return (Criteria) this;
		}

		public Criteria andCreateTimeEqualTo(Date value) {
			addCriterion("create_time =", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotEqualTo(Date value) {
			addCriterion("create_time <>", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThan(Date value) {
			addCriterion("create_time >", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("create_time >=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThan(Date value) {
			addCriterion("create_time <", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
			addCriterion("create_time <=", value, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeIn(List<Date> values) {
			addCriterion("create_time in", values, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotIn(List<Date> values) {
			addCriterion("create_time not in", values, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeBetween(Date value1, Date value2) {
			addCriterion("create_time between", value1, value2, "createTime");
			return (Criteria) this;
		}

		public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
			addCriterion("create_time not between", value1, value2,
					"createTime");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table enterprise_account
	 * @mbggenerated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table enterprise_account
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}