package bz.sunlight.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class BusinessRuleExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table business_rule
	 * @mbggenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table business_rule
	 * @mbggenerated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table business_rule
	 * @mbggenerated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table business_rule
	 * @mbggenerated
	 */
	public BusinessRuleExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table business_rule
	 * @mbggenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table business_rule
	 * @mbggenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table business_rule
	 * @mbggenerated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table business_rule
	 * @mbggenerated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table business_rule
	 * @mbggenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table business_rule
	 * @mbggenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table business_rule
	 * @mbggenerated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table business_rule
	 * @mbggenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table business_rule
	 * @mbggenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table business_rule
	 * @mbggenerated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table business_rule
	 * @mbggenerated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(String value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(String value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(String value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(String value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(String value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(String value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLike(String value) {
			addCriterion("id like", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotLike(String value) {
			addCriterion("id not like", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<String> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<String> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(String value1, String value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(String value1, String value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andConsumptionMiniIsNull() {
			addCriterion("consumption_mini is null");
			return (Criteria) this;
		}

		public Criteria andConsumptionMiniIsNotNull() {
			addCriterion("consumption_mini is not null");
			return (Criteria) this;
		}

		public Criteria andConsumptionMiniEqualTo(Double value) {
			addCriterion("consumption_mini =", value, "consumptionMini");
			return (Criteria) this;
		}

		public Criteria andConsumptionMiniNotEqualTo(Double value) {
			addCriterion("consumption_mini <>", value, "consumptionMini");
			return (Criteria) this;
		}

		public Criteria andConsumptionMiniGreaterThan(Double value) {
			addCriterion("consumption_mini >", value, "consumptionMini");
			return (Criteria) this;
		}

		public Criteria andConsumptionMiniGreaterThanOrEqualTo(Double value) {
			addCriterion("consumption_mini >=", value, "consumptionMini");
			return (Criteria) this;
		}

		public Criteria andConsumptionMiniLessThan(Double value) {
			addCriterion("consumption_mini <", value, "consumptionMini");
			return (Criteria) this;
		}

		public Criteria andConsumptionMiniLessThanOrEqualTo(Double value) {
			addCriterion("consumption_mini <=", value, "consumptionMini");
			return (Criteria) this;
		}

		public Criteria andConsumptionMiniIn(List<Double> values) {
			addCriterion("consumption_mini in", values, "consumptionMini");
			return (Criteria) this;
		}

		public Criteria andConsumptionMiniNotIn(List<Double> values) {
			addCriterion("consumption_mini not in", values, "consumptionMini");
			return (Criteria) this;
		}

		public Criteria andConsumptionMiniBetween(Double value1, Double value2) {
			addCriterion("consumption_mini between", value1, value2,
					"consumptionMini");
			return (Criteria) this;
		}

		public Criteria andConsumptionMiniNotBetween(Double value1,
				Double value2) {
			addCriterion("consumption_mini not between", value1, value2,
					"consumptionMini");
			return (Criteria) this;
		}

		public Criteria andCallPriceIsNull() {
			addCriterion("call_price is null");
			return (Criteria) this;
		}

		public Criteria andCallPriceIsNotNull() {
			addCriterion("call_price is not null");
			return (Criteria) this;
		}

		public Criteria andCallPriceEqualTo(Double value) {
			addCriterion("call_price =", value, "callPrice");
			return (Criteria) this;
		}

		public Criteria andCallPriceNotEqualTo(Double value) {
			addCriterion("call_price <>", value, "callPrice");
			return (Criteria) this;
		}

		public Criteria andCallPriceGreaterThan(Double value) {
			addCriterion("call_price >", value, "callPrice");
			return (Criteria) this;
		}

		public Criteria andCallPriceGreaterThanOrEqualTo(Double value) {
			addCriterion("call_price >=", value, "callPrice");
			return (Criteria) this;
		}

		public Criteria andCallPriceLessThan(Double value) {
			addCriterion("call_price <", value, "callPrice");
			return (Criteria) this;
		}

		public Criteria andCallPriceLessThanOrEqualTo(Double value) {
			addCriterion("call_price <=", value, "callPrice");
			return (Criteria) this;
		}

		public Criteria andCallPriceIn(List<Double> values) {
			addCriterion("call_price in", values, "callPrice");
			return (Criteria) this;
		}

		public Criteria andCallPriceNotIn(List<Double> values) {
			addCriterion("call_price not in", values, "callPrice");
			return (Criteria) this;
		}

		public Criteria andCallPriceBetween(Double value1, Double value2) {
			addCriterion("call_price between", value1, value2, "callPrice");
			return (Criteria) this;
		}

		public Criteria andCallPriceNotBetween(Double value1, Double value2) {
			addCriterion("call_price not between", value1, value2, "callPrice");
			return (Criteria) this;
		}

		public Criteria andCallSecondIsNull() {
			addCriterion("call_second is null");
			return (Criteria) this;
		}

		public Criteria andCallSecondIsNotNull() {
			addCriterion("call_second is not null");
			return (Criteria) this;
		}

		public Criteria andCallSecondEqualTo(Short value) {
			addCriterion("call_second =", value, "callSecond");
			return (Criteria) this;
		}

		public Criteria andCallSecondNotEqualTo(Short value) {
			addCriterion("call_second <>", value, "callSecond");
			return (Criteria) this;
		}

		public Criteria andCallSecondGreaterThan(Short value) {
			addCriterion("call_second >", value, "callSecond");
			return (Criteria) this;
		}

		public Criteria andCallSecondGreaterThanOrEqualTo(Short value) {
			addCriterion("call_second >=", value, "callSecond");
			return (Criteria) this;
		}

		public Criteria andCallSecondLessThan(Short value) {
			addCriterion("call_second <", value, "callSecond");
			return (Criteria) this;
		}

		public Criteria andCallSecondLessThanOrEqualTo(Short value) {
			addCriterion("call_second <=", value, "callSecond");
			return (Criteria) this;
		}

		public Criteria andCallSecondIn(List<Short> values) {
			addCriterion("call_second in", values, "callSecond");
			return (Criteria) this;
		}

		public Criteria andCallSecondNotIn(List<Short> values) {
			addCriterion("call_second not in", values, "callSecond");
			return (Criteria) this;
		}

		public Criteria andCallSecondBetween(Short value1, Short value2) {
			addCriterion("call_second between", value1, value2, "callSecond");
			return (Criteria) this;
		}

		public Criteria andCallSecondNotBetween(Short value1, Short value2) {
			addCriterion("call_second not between", value1, value2,
					"callSecond");
			return (Criteria) this;
		}

		public Criteria andKeepPriceIsNull() {
			addCriterion("keep_price is null");
			return (Criteria) this;
		}

		public Criteria andKeepPriceIsNotNull() {
			addCriterion("keep_price is not null");
			return (Criteria) this;
		}

		public Criteria andKeepPriceEqualTo(Double value) {
			addCriterion("keep_price =", value, "keepPrice");
			return (Criteria) this;
		}

		public Criteria andKeepPriceNotEqualTo(Double value) {
			addCriterion("keep_price <>", value, "keepPrice");
			return (Criteria) this;
		}

		public Criteria andKeepPriceGreaterThan(Double value) {
			addCriterion("keep_price >", value, "keepPrice");
			return (Criteria) this;
		}

		public Criteria andKeepPriceGreaterThanOrEqualTo(Double value) {
			addCriterion("keep_price >=", value, "keepPrice");
			return (Criteria) this;
		}

		public Criteria andKeepPriceLessThan(Double value) {
			addCriterion("keep_price <", value, "keepPrice");
			return (Criteria) this;
		}

		public Criteria andKeepPriceLessThanOrEqualTo(Double value) {
			addCriterion("keep_price <=", value, "keepPrice");
			return (Criteria) this;
		}

		public Criteria andKeepPriceIn(List<Double> values) {
			addCriterion("keep_price in", values, "keepPrice");
			return (Criteria) this;
		}

		public Criteria andKeepPriceNotIn(List<Double> values) {
			addCriterion("keep_price not in", values, "keepPrice");
			return (Criteria) this;
		}

		public Criteria andKeepPriceBetween(Double value1, Double value2) {
			addCriterion("keep_price between", value1, value2, "keepPrice");
			return (Criteria) this;
		}

		public Criteria andKeepPriceNotBetween(Double value1, Double value2) {
			addCriterion("keep_price not between", value1, value2, "keepPrice");
			return (Criteria) this;
		}

		public Criteria andRemindBalanceIsNull() {
			addCriterion("remind_balance is null");
			return (Criteria) this;
		}

		public Criteria andRemindBalanceIsNotNull() {
			addCriterion("remind_balance is not null");
			return (Criteria) this;
		}

		public Criteria andRemindBalanceEqualTo(Double value) {
			addCriterion("remind_balance =", value, "remindBalance");
			return (Criteria) this;
		}

		public Criteria andRemindBalanceNotEqualTo(Double value) {
			addCriterion("remind_balance <>", value, "remindBalance");
			return (Criteria) this;
		}

		public Criteria andRemindBalanceGreaterThan(Double value) {
			addCriterion("remind_balance >", value, "remindBalance");
			return (Criteria) this;
		}

		public Criteria andRemindBalanceGreaterThanOrEqualTo(Double value) {
			addCriterion("remind_balance >=", value, "remindBalance");
			return (Criteria) this;
		}

		public Criteria andRemindBalanceLessThan(Double value) {
			addCriterion("remind_balance <", value, "remindBalance");
			return (Criteria) this;
		}

		public Criteria andRemindBalanceLessThanOrEqualTo(Double value) {
			addCriterion("remind_balance <=", value, "remindBalance");
			return (Criteria) this;
		}

		public Criteria andRemindBalanceIn(List<Double> values) {
			addCriterion("remind_balance in", values, "remindBalance");
			return (Criteria) this;
		}

		public Criteria andRemindBalanceNotIn(List<Double> values) {
			addCriterion("remind_balance not in", values, "remindBalance");
			return (Criteria) this;
		}

		public Criteria andRemindBalanceBetween(Double value1, Double value2) {
			addCriterion("remind_balance between", value1, value2,
					"remindBalance");
			return (Criteria) this;
		}

		public Criteria andRemindBalanceNotBetween(Double value1, Double value2) {
			addCriterion("remind_balance not between", value1, value2,
					"remindBalance");
			return (Criteria) this;
		}

		public Criteria andSeatPriceIsNull() {
			addCriterion("seat_price is null");
			return (Criteria) this;
		}

		public Criteria andSeatPriceIsNotNull() {
			addCriterion("seat_price is not null");
			return (Criteria) this;
		}

		public Criteria andSeatPriceEqualTo(Double value) {
			addCriterion("seat_price =", value, "seatPrice");
			return (Criteria) this;
		}

		public Criteria andSeatPriceNotEqualTo(Double value) {
			addCriterion("seat_price <>", value, "seatPrice");
			return (Criteria) this;
		}

		public Criteria andSeatPriceGreaterThan(Double value) {
			addCriterion("seat_price >", value, "seatPrice");
			return (Criteria) this;
		}

		public Criteria andSeatPriceGreaterThanOrEqualTo(Double value) {
			addCriterion("seat_price >=", value, "seatPrice");
			return (Criteria) this;
		}

		public Criteria andSeatPriceLessThan(Double value) {
			addCriterion("seat_price <", value, "seatPrice");
			return (Criteria) this;
		}

		public Criteria andSeatPriceLessThanOrEqualTo(Double value) {
			addCriterion("seat_price <=", value, "seatPrice");
			return (Criteria) this;
		}

		public Criteria andSeatPriceIn(List<Double> values) {
			addCriterion("seat_price in", values, "seatPrice");
			return (Criteria) this;
		}

		public Criteria andSeatPriceNotIn(List<Double> values) {
			addCriterion("seat_price not in", values, "seatPrice");
			return (Criteria) this;
		}

		public Criteria andSeatPriceBetween(Double value1, Double value2) {
			addCriterion("seat_price between", value1, value2, "seatPrice");
			return (Criteria) this;
		}

		public Criteria andSeatPriceNotBetween(Double value1, Double value2) {
			addCriterion("seat_price not between", value1, value2, "seatPrice");
			return (Criteria) this;
		}

		public Criteria andDiscardRuleIsNull() {
			addCriterion("discard_rule is null");
			return (Criteria) this;
		}

		public Criteria andDiscardRuleIsNotNull() {
			addCriterion("discard_rule is not null");
			return (Criteria) this;
		}

		public Criteria andDiscardRuleEqualTo(String value) {
			addCriterion("discard_rule =", value, "discardRule");
			return (Criteria) this;
		}

		public Criteria andDiscardRuleNotEqualTo(String value) {
			addCriterion("discard_rule <>", value, "discardRule");
			return (Criteria) this;
		}

		public Criteria andDiscardRuleGreaterThan(String value) {
			addCriterion("discard_rule >", value, "discardRule");
			return (Criteria) this;
		}

		public Criteria andDiscardRuleGreaterThanOrEqualTo(String value) {
			addCriterion("discard_rule >=", value, "discardRule");
			return (Criteria) this;
		}

		public Criteria andDiscardRuleLessThan(String value) {
			addCriterion("discard_rule <", value, "discardRule");
			return (Criteria) this;
		}

		public Criteria andDiscardRuleLessThanOrEqualTo(String value) {
			addCriterion("discard_rule <=", value, "discardRule");
			return (Criteria) this;
		}

		public Criteria andDiscardRuleLike(String value) {
			addCriterion("discard_rule like", value, "discardRule");
			return (Criteria) this;
		}

		public Criteria andDiscardRuleNotLike(String value) {
			addCriterion("discard_rule not like", value, "discardRule");
			return (Criteria) this;
		}

		public Criteria andDiscardRuleIn(List<String> values) {
			addCriterion("discard_rule in", values, "discardRule");
			return (Criteria) this;
		}

		public Criteria andDiscardRuleNotIn(List<String> values) {
			addCriterion("discard_rule not in", values, "discardRule");
			return (Criteria) this;
		}

		public Criteria andDiscardRuleBetween(String value1, String value2) {
			addCriterion("discard_rule between", value1, value2, "discardRule");
			return (Criteria) this;
		}

		public Criteria andDiscardRuleNotBetween(String value1, String value2) {
			addCriterion("discard_rule not between", value1, value2,
					"discardRule");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table business_rule
	 * @mbggenerated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table business_rule
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}