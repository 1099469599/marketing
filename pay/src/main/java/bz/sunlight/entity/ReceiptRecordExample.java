package bz.sunlight.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ReceiptRecordExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table receipt_record
	 * @mbggenerated
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table receipt_record
	 * @mbggenerated
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table receipt_record
	 * @mbggenerated
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table receipt_record
	 * @mbggenerated
	 */
	public ReceiptRecordExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table receipt_record
	 * @mbggenerated
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table receipt_record
	 * @mbggenerated
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table receipt_record
	 * @mbggenerated
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table receipt_record
	 * @mbggenerated
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table receipt_record
	 * @mbggenerated
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table receipt_record
	 * @mbggenerated
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table receipt_record
	 * @mbggenerated
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table receipt_record
	 * @mbggenerated
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table receipt_record
	 * @mbggenerated
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table receipt_record
	 * @mbggenerated
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table receipt_record
	 * @mbggenerated
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(String value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(String value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(String value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(String value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(String value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(String value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLike(String value) {
			addCriterion("id like", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotLike(String value) {
			addCriterion("id not like", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<String> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<String> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(String value1, String value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(String value1, String value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andAccountIsNull() {
			addCriterion("account is null");
			return (Criteria) this;
		}

		public Criteria andAccountIsNotNull() {
			addCriterion("account is not null");
			return (Criteria) this;
		}

		public Criteria andAccountEqualTo(Double value) {
			addCriterion("account =", value, "account");
			return (Criteria) this;
		}

		public Criteria andAccountNotEqualTo(Double value) {
			addCriterion("account <>", value, "account");
			return (Criteria) this;
		}

		public Criteria andAccountGreaterThan(Double value) {
			addCriterion("account >", value, "account");
			return (Criteria) this;
		}

		public Criteria andAccountGreaterThanOrEqualTo(Double value) {
			addCriterion("account >=", value, "account");
			return (Criteria) this;
		}

		public Criteria andAccountLessThan(Double value) {
			addCriterion("account <", value, "account");
			return (Criteria) this;
		}

		public Criteria andAccountLessThanOrEqualTo(Double value) {
			addCriterion("account <=", value, "account");
			return (Criteria) this;
		}

		public Criteria andAccountIn(List<Double> values) {
			addCriterion("account in", values, "account");
			return (Criteria) this;
		}

		public Criteria andAccountNotIn(List<Double> values) {
			addCriterion("account not in", values, "account");
			return (Criteria) this;
		}

		public Criteria andAccountBetween(Double value1, Double value2) {
			addCriterion("account between", value1, value2, "account");
			return (Criteria) this;
		}

		public Criteria andAccountNotBetween(Double value1, Double value2) {
			addCriterion("account not between", value1, value2, "account");
			return (Criteria) this;
		}

		public Criteria andGiftAccountIsNull() {
			addCriterion("gift_account is null");
			return (Criteria) this;
		}

		public Criteria andGiftAccountIsNotNull() {
			addCriterion("gift_account is not null");
			return (Criteria) this;
		}

		public Criteria andGiftAccountEqualTo(Double value) {
			addCriterion("gift_account =", value, "giftAccount");
			return (Criteria) this;
		}

		public Criteria andGiftAccountNotEqualTo(Double value) {
			addCriterion("gift_account <>", value, "giftAccount");
			return (Criteria) this;
		}

		public Criteria andGiftAccountGreaterThan(Double value) {
			addCriterion("gift_account >", value, "giftAccount");
			return (Criteria) this;
		}

		public Criteria andGiftAccountGreaterThanOrEqualTo(Double value) {
			addCriterion("gift_account >=", value, "giftAccount");
			return (Criteria) this;
		}

		public Criteria andGiftAccountLessThan(Double value) {
			addCriterion("gift_account <", value, "giftAccount");
			return (Criteria) this;
		}

		public Criteria andGiftAccountLessThanOrEqualTo(Double value) {
			addCriterion("gift_account <=", value, "giftAccount");
			return (Criteria) this;
		}

		public Criteria andGiftAccountIn(List<Double> values) {
			addCriterion("gift_account in", values, "giftAccount");
			return (Criteria) this;
		}

		public Criteria andGiftAccountNotIn(List<Double> values) {
			addCriterion("gift_account not in", values, "giftAccount");
			return (Criteria) this;
		}

		public Criteria andGiftAccountBetween(Double value1, Double value2) {
			addCriterion("gift_account between", value1, value2, "giftAccount");
			return (Criteria) this;
		}

		public Criteria andGiftAccountNotBetween(Double value1, Double value2) {
			addCriterion("gift_account not between", value1, value2,
					"giftAccount");
			return (Criteria) this;
		}

		public Criteria andTypeIsNull() {
			addCriterion("type is null");
			return (Criteria) this;
		}

		public Criteria andTypeIsNotNull() {
			addCriterion("type is not null");
			return (Criteria) this;
		}

		public Criteria andTypeEqualTo(Short value) {
			addCriterion("type =", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeNotEqualTo(Short value) {
			addCriterion("type <>", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeGreaterThan(Short value) {
			addCriterion("type >", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeGreaterThanOrEqualTo(Short value) {
			addCriterion("type >=", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeLessThan(Short value) {
			addCriterion("type <", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeLessThanOrEqualTo(Short value) {
			addCriterion("type <=", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeIn(List<Short> values) {
			addCriterion("type in", values, "type");
			return (Criteria) this;
		}

		public Criteria andTypeNotIn(List<Short> values) {
			addCriterion("type not in", values, "type");
			return (Criteria) this;
		}

		public Criteria andTypeBetween(Short value1, Short value2) {
			addCriterion("type between", value1, value2, "type");
			return (Criteria) this;
		}

		public Criteria andTypeNotBetween(Short value1, Short value2) {
			addCriterion("type not between", value1, value2, "type");
			return (Criteria) this;
		}

		public Criteria andPayTimeIsNull() {
			addCriterion("pay_time is null");
			return (Criteria) this;
		}

		public Criteria andPayTimeIsNotNull() {
			addCriterion("pay_time is not null");
			return (Criteria) this;
		}

		public Criteria andPayTimeEqualTo(Date value) {
			addCriterion("pay_time =", value, "payTime");
			return (Criteria) this;
		}

		public Criteria andPayTimeNotEqualTo(Date value) {
			addCriterion("pay_time <>", value, "payTime");
			return (Criteria) this;
		}

		public Criteria andPayTimeGreaterThan(Date value) {
			addCriterion("pay_time >", value, "payTime");
			return (Criteria) this;
		}

		public Criteria andPayTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("pay_time >=", value, "payTime");
			return (Criteria) this;
		}

		public Criteria andPayTimeLessThan(Date value) {
			addCriterion("pay_time <", value, "payTime");
			return (Criteria) this;
		}

		public Criteria andPayTimeLessThanOrEqualTo(Date value) {
			addCriterion("pay_time <=", value, "payTime");
			return (Criteria) this;
		}

		public Criteria andPayTimeIn(List<Date> values) {
			addCriterion("pay_time in", values, "payTime");
			return (Criteria) this;
		}

		public Criteria andPayTimeNotIn(List<Date> values) {
			addCriterion("pay_time not in", values, "payTime");
			return (Criteria) this;
		}

		public Criteria andPayTimeBetween(Date value1, Date value2) {
			addCriterion("pay_time between", value1, value2, "payTime");
			return (Criteria) this;
		}

		public Criteria andPayTimeNotBetween(Date value1, Date value2) {
			addCriterion("pay_time not between", value1, value2, "payTime");
			return (Criteria) this;
		}

		public Criteria andEnterpriseIdIsNull() {
			addCriterion("enterprise_id is null");
			return (Criteria) this;
		}

		public Criteria andEnterpriseIdIsNotNull() {
			addCriterion("enterprise_id is not null");
			return (Criteria) this;
		}

		public Criteria andEnterpriseIdEqualTo(String value) {
			addCriterion("enterprise_id =", value, "enterpriseId");
			return (Criteria) this;
		}

		public Criteria andEnterpriseIdNotEqualTo(String value) {
			addCriterion("enterprise_id <>", value, "enterpriseId");
			return (Criteria) this;
		}

		public Criteria andEnterpriseIdGreaterThan(String value) {
			addCriterion("enterprise_id >", value, "enterpriseId");
			return (Criteria) this;
		}

		public Criteria andEnterpriseIdGreaterThanOrEqualTo(String value) {
			addCriterion("enterprise_id >=", value, "enterpriseId");
			return (Criteria) this;
		}

		public Criteria andEnterpriseIdLessThan(String value) {
			addCriterion("enterprise_id <", value, "enterpriseId");
			return (Criteria) this;
		}

		public Criteria andEnterpriseIdLessThanOrEqualTo(String value) {
			addCriterion("enterprise_id <=", value, "enterpriseId");
			return (Criteria) this;
		}

		public Criteria andEnterpriseIdLike(String value) {
			addCriterion("enterprise_id like", value, "enterpriseId");
			return (Criteria) this;
		}

		public Criteria andEnterpriseIdNotLike(String value) {
			addCriterion("enterprise_id not like", value, "enterpriseId");
			return (Criteria) this;
		}

		public Criteria andEnterpriseIdIn(List<String> values) {
			addCriterion("enterprise_id in", values, "enterpriseId");
			return (Criteria) this;
		}

		public Criteria andEnterpriseIdNotIn(List<String> values) {
			addCriterion("enterprise_id not in", values, "enterpriseId");
			return (Criteria) this;
		}

		public Criteria andEnterpriseIdBetween(String value1, String value2) {
			addCriterion("enterprise_id between", value1, value2,
					"enterpriseId");
			return (Criteria) this;
		}

		public Criteria andEnterpriseIdNotBetween(String value1, String value2) {
			addCriterion("enterprise_id not between", value1, value2,
					"enterpriseId");
			return (Criteria) this;
		}

		public Criteria andUserInfoIdIsNull() {
			addCriterion("user_info_id is null");
			return (Criteria) this;
		}

		public Criteria andUserInfoIdIsNotNull() {
			addCriterion("user_info_id is not null");
			return (Criteria) this;
		}

		public Criteria andUserInfoIdEqualTo(String value) {
			addCriterion("user_info_id =", value, "userInfoId");
			return (Criteria) this;
		}

		public Criteria andUserInfoIdNotEqualTo(String value) {
			addCriterion("user_info_id <>", value, "userInfoId");
			return (Criteria) this;
		}

		public Criteria andUserInfoIdGreaterThan(String value) {
			addCriterion("user_info_id >", value, "userInfoId");
			return (Criteria) this;
		}

		public Criteria andUserInfoIdGreaterThanOrEqualTo(String value) {
			addCriterion("user_info_id >=", value, "userInfoId");
			return (Criteria) this;
		}

		public Criteria andUserInfoIdLessThan(String value) {
			addCriterion("user_info_id <", value, "userInfoId");
			return (Criteria) this;
		}

		public Criteria andUserInfoIdLessThanOrEqualTo(String value) {
			addCriterion("user_info_id <=", value, "userInfoId");
			return (Criteria) this;
		}

		public Criteria andUserInfoIdLike(String value) {
			addCriterion("user_info_id like", value, "userInfoId");
			return (Criteria) this;
		}

		public Criteria andUserInfoIdNotLike(String value) {
			addCriterion("user_info_id not like", value, "userInfoId");
			return (Criteria) this;
		}

		public Criteria andUserInfoIdIn(List<String> values) {
			addCriterion("user_info_id in", values, "userInfoId");
			return (Criteria) this;
		}

		public Criteria andUserInfoIdNotIn(List<String> values) {
			addCriterion("user_info_id not in", values, "userInfoId");
			return (Criteria) this;
		}

		public Criteria andUserInfoIdBetween(String value1, String value2) {
			addCriterion("user_info_id between", value1, value2, "userInfoId");
			return (Criteria) this;
		}

		public Criteria andUserInfoIdNotBetween(String value1, String value2) {
			addCriterion("user_info_id not between", value1, value2,
					"userInfoId");
			return (Criteria) this;
		}

		public Criteria andCurrentAccountIsNull() {
			addCriterion("current_account is null");
			return (Criteria) this;
		}

		public Criteria andCurrentAccountIsNotNull() {
			addCriterion("current_account is not null");
			return (Criteria) this;
		}

		public Criteria andCurrentAccountEqualTo(Double value) {
			addCriterion("current_account =", value, "currentAccount");
			return (Criteria) this;
		}

		public Criteria andCurrentAccountNotEqualTo(Double value) {
			addCriterion("current_account <>", value, "currentAccount");
			return (Criteria) this;
		}

		public Criteria andCurrentAccountGreaterThan(Double value) {
			addCriterion("current_account >", value, "currentAccount");
			return (Criteria) this;
		}

		public Criteria andCurrentAccountGreaterThanOrEqualTo(Double value) {
			addCriterion("current_account >=", value, "currentAccount");
			return (Criteria) this;
		}

		public Criteria andCurrentAccountLessThan(Double value) {
			addCriterion("current_account <", value, "currentAccount");
			return (Criteria) this;
		}

		public Criteria andCurrentAccountLessThanOrEqualTo(Double value) {
			addCriterion("current_account <=", value, "currentAccount");
			return (Criteria) this;
		}

		public Criteria andCurrentAccountIn(List<Double> values) {
			addCriterion("current_account in", values, "currentAccount");
			return (Criteria) this;
		}

		public Criteria andCurrentAccountNotIn(List<Double> values) {
			addCriterion("current_account not in", values, "currentAccount");
			return (Criteria) this;
		}

		public Criteria andCurrentAccountBetween(Double value1, Double value2) {
			addCriterion("current_account between", value1, value2,
					"currentAccount");
			return (Criteria) this;
		}

		public Criteria andCurrentAccountNotBetween(Double value1, Double value2) {
			addCriterion("current_account not between", value1, value2,
					"currentAccount");
			return (Criteria) this;
		}

		public Criteria andAdminInfoIdIsNull() {
			addCriterion("admin_info_id is null");
			return (Criteria) this;
		}

		public Criteria andAdminInfoIdIsNotNull() {
			addCriterion("admin_info_id is not null");
			return (Criteria) this;
		}

		public Criteria andAdminInfoIdEqualTo(String value) {
			addCriterion("admin_info_id =", value, "adminInfoId");
			return (Criteria) this;
		}

		public Criteria andAdminInfoIdNotEqualTo(String value) {
			addCriterion("admin_info_id <>", value, "adminInfoId");
			return (Criteria) this;
		}

		public Criteria andAdminInfoIdGreaterThan(String value) {
			addCriterion("admin_info_id >", value, "adminInfoId");
			return (Criteria) this;
		}

		public Criteria andAdminInfoIdGreaterThanOrEqualTo(String value) {
			addCriterion("admin_info_id >=", value, "adminInfoId");
			return (Criteria) this;
		}

		public Criteria andAdminInfoIdLessThan(String value) {
			addCriterion("admin_info_id <", value, "adminInfoId");
			return (Criteria) this;
		}

		public Criteria andAdminInfoIdLessThanOrEqualTo(String value) {
			addCriterion("admin_info_id <=", value, "adminInfoId");
			return (Criteria) this;
		}

		public Criteria andAdminInfoIdLike(String value) {
			addCriterion("admin_info_id like", value, "adminInfoId");
			return (Criteria) this;
		}

		public Criteria andAdminInfoIdNotLike(String value) {
			addCriterion("admin_info_id not like", value, "adminInfoId");
			return (Criteria) this;
		}

		public Criteria andAdminInfoIdIn(List<String> values) {
			addCriterion("admin_info_id in", values, "adminInfoId");
			return (Criteria) this;
		}

		public Criteria andAdminInfoIdNotIn(List<String> values) {
			addCriterion("admin_info_id not in", values, "adminInfoId");
			return (Criteria) this;
		}

		public Criteria andAdminInfoIdBetween(String value1, String value2) {
			addCriterion("admin_info_id between", value1, value2, "adminInfoId");
			return (Criteria) this;
		}

		public Criteria andAdminInfoIdNotBetween(String value1, String value2) {
			addCriterion("admin_info_id not between", value1, value2,
					"adminInfoId");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table receipt_record
	 * @mbggenerated
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table receipt_record
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}