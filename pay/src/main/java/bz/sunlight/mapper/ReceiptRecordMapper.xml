<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bz.sunlight.dao.ReceiptRecordMapper">
  <resultMap id="BaseResultMap" type="bz.sunlight.entity.ReceiptRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="account" jdbcType="DOUBLE" property="account" />
    <result column="gift_account" jdbcType="DOUBLE" property="giftAccount" />
    <result column="type" jdbcType="SMALLINT" property="type" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="enterprise_id" jdbcType="VARCHAR" property="enterpriseId" />
    <result column="user_info_id" jdbcType="VARCHAR" property="userInfoId" />
    <result column="current_account" jdbcType="DOUBLE" property="currentAccount" />
    <result column="admin_info_id" jdbcType="VARCHAR" property="adminInfoId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, account, gift_account, type, pay_time, enterprise_id, user_info_id, current_account, 
    admin_info_id
  </sql>
  <select id="selectByExample" parameterType="bz.sunlight.entity.ReceiptRecordExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from receipt_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from receipt_record
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from receipt_record
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="bz.sunlight.entity.ReceiptRecordExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from receipt_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="bz.sunlight.entity.ReceiptRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into receipt_record (id, account, gift_account, 
      type, pay_time, enterprise_id, 
      user_info_id, current_account, admin_info_id
      )
    values (#{id,jdbcType=VARCHAR}, #{account,jdbcType=DOUBLE}, #{giftAccount,jdbcType=DOUBLE}, 
      #{type,jdbcType=SMALLINT}, #{payTime,jdbcType=TIMESTAMP}, #{enterpriseId,jdbcType=VARCHAR}, 
      #{userInfoId,jdbcType=VARCHAR}, #{currentAccount,jdbcType=DOUBLE}, #{adminInfoId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="bz.sunlight.entity.ReceiptRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into receipt_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="giftAccount != null">
        gift_account,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="enterpriseId != null">
        enterprise_id,
      </if>
      <if test="userInfoId != null">
        user_info_id,
      </if>
      <if test="currentAccount != null">
        current_account,
      </if>
      <if test="adminInfoId != null">
        admin_info_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=DOUBLE},
      </if>
      <if test="giftAccount != null">
        #{giftAccount,jdbcType=DOUBLE},
      </if>
      <if test="type != null">
        #{type,jdbcType=SMALLINT},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enterpriseId != null">
        #{enterpriseId,jdbcType=VARCHAR},
      </if>
      <if test="userInfoId != null">
        #{userInfoId,jdbcType=VARCHAR},
      </if>
      <if test="currentAccount != null">
        #{currentAccount,jdbcType=DOUBLE},
      </if>
      <if test="adminInfoId != null">
        #{adminInfoId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="bz.sunlight.entity.ReceiptRecordExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from receipt_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update receipt_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=DOUBLE},
      </if>
      <if test="record.giftAccount != null">
        gift_account = #{record.giftAccount,jdbcType=DOUBLE},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=SMALLINT},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.enterpriseId != null">
        enterprise_id = #{record.enterpriseId,jdbcType=VARCHAR},
      </if>
      <if test="record.userInfoId != null">
        user_info_id = #{record.userInfoId,jdbcType=VARCHAR},
      </if>
      <if test="record.currentAccount != null">
        current_account = #{record.currentAccount,jdbcType=DOUBLE},
      </if>
      <if test="record.adminInfoId != null">
        admin_info_id = #{record.adminInfoId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update receipt_record
    set id = #{record.id,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=DOUBLE},
      gift_account = #{record.giftAccount,jdbcType=DOUBLE},
      type = #{record.type,jdbcType=SMALLINT},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      enterprise_id = #{record.enterpriseId,jdbcType=VARCHAR},
      user_info_id = #{record.userInfoId,jdbcType=VARCHAR},
      current_account = #{record.currentAccount,jdbcType=DOUBLE},
      admin_info_id = #{record.adminInfoId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="bz.sunlight.entity.ReceiptRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update receipt_record
    <set>
      <if test="account != null">
        account = #{account,jdbcType=DOUBLE},
      </if>
      <if test="giftAccount != null">
        gift_account = #{giftAccount,jdbcType=DOUBLE},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=SMALLINT},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enterpriseId != null">
        enterprise_id = #{enterpriseId,jdbcType=VARCHAR},
      </if>
      <if test="userInfoId != null">
        user_info_id = #{userInfoId,jdbcType=VARCHAR},
      </if>
      <if test="currentAccount != null">
        current_account = #{currentAccount,jdbcType=DOUBLE},
      </if>
      <if test="adminInfoId != null">
        admin_info_id = #{adminInfoId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="bz.sunlight.entity.ReceiptRecord">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update receipt_record
    set account = #{account,jdbcType=DOUBLE},
      gift_account = #{giftAccount,jdbcType=DOUBLE},
      type = #{type,jdbcType=SMALLINT},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      enterprise_id = #{enterpriseId,jdbcType=VARCHAR},
      user_info_id = #{userInfoId,jdbcType=VARCHAR},
      current_account = #{currentAccount,jdbcType=DOUBLE},
      admin_info_id = #{adminInfoId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <resultMap id="AllResultMap" type="bz.sunlight.entity.ReceiptRecord">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="account" jdbcType="REAL" property="account" />
    <result column="gift_account" jdbcType="REAL" property="giftAccount" />
    <result column="type" jdbcType="SMALLINT" property="type" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="enterprise_id" jdbcType="VARCHAR" property="enterpriseId" />
    <result column="user_info_id" jdbcType="VARCHAR" property="userInfoId" />
    <result column="current_account" jdbcType="REAL" property="currentAccount" />
    
      <association javaType="bz.sunlight.entity.UserInfo" property="userInfo">
      	    <id column="u_id" jdbcType="VARCHAR" property="id" />
		    <result column="u_enterprise_id" jdbcType="VARCHAR" property="enterpriseId" />
		    <result column="u_name" jdbcType="VARCHAR" property="name" />
		    <result column="gender" jdbcType="SMALLINT" property="gender" />
		    <result column="job_number" jdbcType="VARCHAR" property="jobNumber" />
		    <result column="position" jdbcType="SMALLINT" property="position" />
		    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
  	  </association>
      <association javaType="bz.sunlight.dto.AdminInfoDTO" property="adminInfo">
      	    <id column="a_id" jdbcType="VARCHAR" property="id" />
			<result column="user_name" jdbcType="VARCHAR" property="userName" />
    		<result column="password" jdbcType="VARCHAR" property="password" />
    		<result column="a_status" jdbcType="SMALLINT" property="status" />
    		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  	  </association>
  	  <association javaType="bz.sunlight.entity.Enterprise" property="enterprise">
      	    <id column="e_id" jdbcType="VARCHAR" property="id" />
		    <result column="code" jdbcType="VARCHAR" property="code" />
		    <result column="e_name" jdbcType="VARCHAR" property="name" />
		    <result column="short_name" jdbcType="VARCHAR" property="shortName" />
		    <result column="industry" jdbcType="SMALLINT" property="industry" />
		    <result column="address" jdbcType="VARCHAR" property="address" />
		    <result column="bank" jdbcType="VARCHAR" property="bank" />
		    <result column="billing_address" jdbcType="VARCHAR" property="billingAddress" />
		    <result column="bank_account" jdbcType="VARCHAR" property="bankAccount" />
		    <result column="tax_number" jdbcType="VARCHAR" property="taxNumber" />
		    <result column="tel" jdbcType="VARCHAR" property="tel" />
		    <result column="contact_name" jdbcType="VARCHAR" property="contactName" />
		    <result column="contact_mobile" jdbcType="VARCHAR" property="contactMobile" />
		    <result column="status" jdbcType="SMALLINT" property="status" />
		    <result column="brand_id" jdbcType="VARCHAR" property="brandId" />
      </association>
  </resultMap>
  
  <select id="selectReceiptWithUserAndEnterprise" parameterType="java.util.Map" resultMap="AllResultMap">
    select 
    re.id,
    re.account,
    re.gift_account,
    re.type,
    re.pay_time,
    re.current_account,
    u.id as u_id,
    u.name as u_name,
    e.id as e_id,
    e.name as e_name,
    ad.id as a_id,
    ad.user_name
    from receipt_record re
    left join user_info u
    on re.user_info_id=u.id
    left join admin_info ad
    on re.admin_info_id=ad.id
    inner join 
    enterprise e
    on re.enterprise_id=e.id
    and re.enterprise_id=#{enterpriseId}
    <if test="type !=null">
    	<![CDATA[
      and re.type = #{type}
      ]]>
    </if>
    <if test="startPayTime !=null">
    	<![CDATA[
      and re.pay_time >= #{startPayTime}
      ]]>
    </if>
    <if test="endPayTime !=null">
    	<![CDATA[
      and re.pay_time <= #{endPayTime}
      ]]>
    </if>
    order by re.pay_time desc
    LIMIT #{pageItemStart},#{pageSize}
  </select>
  
  <select id="getReciptRecordCount"  resultType="java.lang.Integer">
    
    select 
    count(re.id)
    from receipt_record re
    where 
     re.enterprise_id=#{enterpriseId}
    <if test="type !=null">
    	<![CDATA[
      and re.type = #{type}
      ]]>
    </if>
    <if test="startPayTime !=null">
    	<![CDATA[
      and re.pay_time >= #{startPayTime}
      ]]>
    </if>
    <if test="endPayTime !=null">
    	<![CDATA[
      and re.pay_time <= #{endPayTime}
      ]]>
    </if>
    
  </select>
  
  <select id="selectReceiptWithAdmin" parameterType="java.util.Map" resultMap="AllResultMap">
    
    select 
    re.id,
    re.account,
    re.gift_account,
    re.type,
    re.pay_time,
    re.current_account,
    u.id as u_id,
    u.user_name,
    e.id as e_id,
    e.name as e_name
    from receipt_record re,
    admin_info u,
    enterprise e
    where 
     re.enterprise_id=e.id
     and re.type=#{type}
    order by re.enterprise_id desc,re.pay_time desc
    LIMIT #{pageItemStart},#{pageSize}
  </select>
  
  <select id="selectAdminReceiptCount"   resultType="java.lang.Integer">
    
    select 
    count(re.id)
    from receipt_record re
    where 
     re.type=#{type}
    
  </select>
</mapper>